import{_ as e,c as s,o as a,ae as n}from"./chunks/framework.D9t5pQk-.js";const g=JSON.parse('{"title":"AHQ Store Plugin API","description":"","frontmatter":{},"headers":[],"relativePath":"@ahqstore/plugin-api/index.md","filePath":"@ahqstore/plugin-api/index.md"}'),t={name:"@ahqstore/plugin-api/index.md"};function o(r,i,p,l,h,d){return a(),s("div",null,[...i[0]||(i[0]=[n(`<h1 id="ahq-store-plugin-api" tabindex="-1">AHQ Store Plugin API <a class="header-anchor" href="#ahq-store-plugin-api" aria-label="Permalink to &quot;AHQ Store Plugin API&quot;">​</a></h1><p>This is an Plugin API Wrapper. As you&#39;d know AHQ Store Worker Plugins run in a specialized containerized environment called AHQStoreJS.</p><p>This whole plugin is written using the runtimes and interfaces available in AHQStoreJS and will not work in environments like <strong>NodeJS, Deno, Bun</strong>.</p><p>You only have to import the <code>Plugin</code> interface from <code>@ahqstore/plugin-api</code></p><h2 id="scope" tabindex="-1">Scope <a class="header-anchor" href="#scope" aria-label="Permalink to &quot;Scope&quot;">​</a></h2><p>This part of the API exports the functions needed to integrate an <strong>AHQ Store</strong><strong><code>CORE PLUGIN WORKER</code></strong></p><p>A core plugin worker basically extends the core of <strong>AHQ Store</strong> using the provided api and api <strong>conventions</strong> that keep changing like the time (I bet it has changed since you last read it)</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Plugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@ahqstore/plugin-api&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div>`,8)])])}const k=e(t,[["render",o]]);export{g as __pageData,k as default};
